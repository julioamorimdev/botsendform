[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "form-bot"
dynamic = ["version"]
description = "A powerful and flexible automated form submission tool"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Júlio César de Amorim", email = "julio@grupojpc.com.br"}
]
maintainers = [
    {name = "Júlio César de Amorim", email = "julio@grupojpc.com.br"}
]
keywords = ["automation", "selenium", "forms", "excel", "web-scraping", "bot"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: Browsers",
    "Topic :: Office/Business :: Financial :: Spreadsheet",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Testing",
    "Topic :: Utilities",
]
requires-python = ">=3.8"
dependencies = [
    "pandas>=1.5.0",
    "selenium>=4.0.0",
    "webdriver-manager>=3.8.0",
    "openpyxl>=3.0.0",
    "python-dotenv>=0.19.0",
    "colorama>=0.4.5",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "isort>=5.10.0",
    "mypy>=1.0.0",
    "bandit>=1.7.0",
    "safety>=2.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.8.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.18.0",
]

[project.urls]
Homepage = "https://github.com/julioamorimdev/botsendform"
Documentation = "https://github.com/julioamorimdev/botsendform#readme"
Repository = "https://github.com/julioamorimdev/botsendform.git"
"Bug Tracker" = "https://github.com/julioamorimdev/botsendform/issues"
"Discussions" = "https://github.com/julioamorimdev/botsendform/discussions"
Changelog = "https://github.com/julioamorimdev/botsendform/blob/main/CHANGELOG.md"

[project.scripts]
form-bot = "main:main"

[tool.setuptools]
packages = ["utils"]

[tool.setuptools.package-data]
"*" = ["*.txt", "*.md", "*.yml", "*.yaml"]

[tool.setuptools_scm]
write_to = "utils/_version.py"
fallback_version = "0.0.0"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["utils"]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    "venv",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["utils", "main.py", "form_bot.py", "config.py"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "venv", "env"]
skips = ["B101", "B601"]

[tool.safety]
output = "json" 